[versions]
# config
compileSdk = "30"
minSdk = "23"
targetSdk = "30"
versionCode = "1"
versionName = "1.0"
applicationId = "com.app.blingy.reauty"
testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"

# build plugin
gradlePlugin = "7.0.2"
spotlessPlugin = "5.14.2"
ktlintPlugin = "0.39.0"

# kotlin
kotlin = "1.5.30"
ktx = "1.6.0"

# support
appCompat = "1.3.1"
material = "1.4.0"
constraint = "2.1.0"
viewpager = "1.0.0"
circleIndicator = "2.1.6"

# jetpack
lifeCycle = "2.3.1"
navigation = "2.3.5"
room = "2.3.0"
dataStore = "1.0.0"
workManager = "2.5.0"
paging = "3.0.1"
activity = "1.3.0"

# di
hilt = "2.38.1"

# network
retrofit = "2.9.0"
okHttp = "4.9.1"
gson = "2.8.7"

# documentation
dokka = "1.5.0"

# code coverage
jacoco = "0.8.7"

# dependency update checker
dependencyUpdate = "0.39.0"

# image library
glide = "4.12.0"


# thread
coroutine = "1.5.2-native-mt"

# logging
timber = "4.7.1"
orhanobut = "2.2.0"

# date time
kotlinxDateTime = "0.2.1"

# animation
lottie = "4.1.0"

# firebase
googleService = "4.3.8"
auth = "21.0.1"
realtimeDatabase = "20.0.0"
cloudStorage = "20.0.0"
googleSignIn = "19.2.0"
dynamicLink = "20.1.1"

# testing
jUnit = "4.13.2"
jUnitExt = "1.1.3"
androidx = "1.4.0"
truth = "1.1.3"
turbine = "0.6.0"
mockito = "3.11.2"
mockitoKotlin = "3.2.0"
espresso = "3.4.0"
coreTesting = "2.1.0"


[libraries]
# plugins
gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "gradlePlugin" }
kotlinPlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
hiltPlugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
spotlessPlugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotlessPlugin" }
navigationPlugin = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigation" }
dokkaPlugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
dependencyUpdatePlugin = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "dependencyUpdate" }
jacocoPlugin = { module = "org.jacoco:org.jacoco.core", version.ref = "jacoco" }
googleServicePlugin = { module = "com.google.gms:google-services", version.ref = "googleService" }

# ktx
ktx = { module = "androidx.core:core-ktx", version.ref = "ktx" }

# support
support-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
support-material = { module = "com.google.android.material:material", version.ref = "material" }
support-constraint = {module = "androidx.constraintlayout:constraintlayout", version.ref = "constraint"}
support-viewpager = {module = "androidx.viewpager2:viewpager2", version.ref = "viewpager"}
support-circleIndicator = {module = "me.relex:circleindicator", version.ref = "circleIndicator"}

# jetpack
jetpack-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifeCycle" }
jetpack-lifecycle-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifeCycle" }
jetpack-navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
jetpack-navigation-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
jetpack-room = { module = "androidx.room:room-runtime", version.ref = "room" }
jetpack-ktx-room = { module = "androidx.room:room-ktx", version.ref = "room" }
jetpack-compiler-room = { module = "androidx.room:room-compiler", version.ref = "room" }
jetpack-datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }
jetpack-paging = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }
jetpack-workmanager = { module = "androidx.work:work-runtime-ktx", version.ref = "workManager" }

# di
di-hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
di-compiler-hilt = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }

# network
network-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
network-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }
network-converter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
network-gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
network-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }

# image library
image-glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
image-compiler-glide = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }

# logging
log-timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
log-orhanobut = { module = "com.orhanobut:logger", version.ref = "orhanobut" }

# coroutine
coroutine-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutine-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }

# date time
datetime-kotlinx = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }

# animation
lottieAnimation = {module = "com.airbnb.android:lottie", version.ref = "lottie"}

# firebase
firebaseAuth = { module = "com.google.firebase:firebase-auth-ktx", version.ref = "auth" }
firebaseRealTimeDatabase = { module = "com.google.firebase:firebase-database-ktx", version.ref = "realtimeDatabase" }
firebaseCloudStorage = { module = "com.google.firebase:firebase-storage-ktx", version.ref = "cloudStorage" }
coroutineService = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutine" }
firebaseGoogleSignIn = {module = "com.google.android.gms:play-services-auth", version.ref = "googleSignIn"}
firebaseDynamicLink = {module = "com.google.firebase:firebase-dynamic-links-ktx", version.ref = "dynamicLink"}

# testing
# unit test
unit-coroutine-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }
unit-coroutine-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutine" }
unit-okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okHttp" }
unit-junit = { module = "junit:junit", version.ref = "jUnit" }
unit-androidx-test = { module = "androidx.test:core", version.ref = "androidx" }
unit-truth = { module = "com.google.truth:truth", version.ref = "truth" }
unit-turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
unit-mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
unit-kotlin-mockito = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
unit-hilt = {module = "com.google.dagger:hilt-android-testing", version.ref = "hilt"}
unit-core-testing = {module = "androidx.arch.core:core-testing", version.ref = "coreTesting"}
unit-core-common = {module = "androidx.arch.core:core-common", version.ref = "coreTesting"}
unit-core-runtime = {module = "androidx.arch.core:core-runtime", version.ref = "coreTesting"}

# instrumented test
instrumented-junit-ext = { module = "androidx.test.ext:junit", version.ref = "jUnitExt" }
instrumented-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
instrumented-truth = { module = "com.google.truth:truth", version.ref = "truth" }
instrumented-hilt = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
instrumented-room = { module = "androidx.room:room-testing", version.ref = "room" }
instrumented-workmanager = { module = "androidx.work:work-testing", version.ref = "workManager" }
instrumented-navigation = { module = "androidx.navigation:navigation-testing", version.ref = "navigation" }
instrumented-mockito-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okHttp" }
instrumented-core-testing = {module = "androidx.arch.core:core-testing", version.ref = "coreTesting"}
instrumented-core-common = {module = "androidx.arch.core:core-common", version.ref = "coreTesting"}
instrumented-core-runtime = {module = "androidx.arch.core:core-runtime", version.ref = "coreTesting"}

# kapt test
kapt-hilt = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
kapt-instrumented-hilt = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }


[bundles]
support-bundles = ["ktx", "support-appcompat", "support-material",
    "support-constraint", "support-viewpager", "support-circleIndicator"]

jetpack-bundles = ["jetpack-lifecycle-viewmodel", "jetpack-lifecycle-ktx",
    "jetpack-navigation-fragment", "jetpack-navigation-ktx",
    "jetpack-room", "jetpack-ktx-room", "jetpack-datastore",
    "jetpack-paging", "jetpack-workmanager"]

kapt-bundles = ["jetpack-compiler-room", "di-compiler-hilt", "image-compiler-glide" ]

di-bundles = ["di-hilt"]

network-bundles = ["network-retrofit", "network-interceptor", "network-converter",
    "network-gson", "network-okhttp"]

image-bundles = ["image-glide"]

log-bundles = ["log-timber", "log-orhanobut"]

coroutines-bundles = ["coroutine-android", "coroutine-core"]

datetime-bundles = ["datetime-kotlinx"]

util-bundles = ["lottieAnimation"]

unit-testing-bundles = ["unit-coroutine-android", "unit-coroutine-test",
    "unit-okhttp-mockwebserver", "unit-junit",
    "unit-androidx-test", "unit-truth",
    "unit-turbine", "unit-mockito",
    "unit-kotlin-mockito", "unit-hilt",
"unit-core-testing", "unit-core-common", "unit-core-runtime"]

instrumented-testing-bundles = ["instrumented-junit-ext", "instrumented-espresso",
    "instrumented-truth", "instrumented-hilt",
    "instrumented-room", "instrumented-workmanager",
    "instrumented-navigation", "instrumented-mockito-mockwebserver",
"instrumented-core-testing", "instrumented-core-common", "instrumented-core-runtime"]

firebase-bundles = ["firebaseAuth", "firebaseRealTimeDatabase",
    "firebaseCloudStorage", "coroutineService",
    "firebaseGoogleSignIn", "firebaseDynamicLink"]
